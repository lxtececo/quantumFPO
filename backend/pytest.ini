# pytest configuration for comprehensive testing
[tool:pytest]
minversion = 6.0
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80

testpaths = 
    src/test/python

python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    performance: marks tests as performance tests
    smoke: marks tests as smoke tests
    asyncio: marks tests as async tests
    complex: marks tests as complex/comprehensive (use pytest -m complex to run)

filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning

# Coverage configuration
[coverage:run]
source = src/main/python
omit = 
    */test/*
    */tests/*
    */__pycache__/*
    */site-packages/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = true
precision = 2

[coverage:html]
directory = htmlcov